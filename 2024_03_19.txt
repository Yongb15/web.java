openjdk
jdk(java development kit)
환경변수
새로만들기
변수이름 : JAVA_HOME
변수 값 : 주소
Path -> 편집 -> %JAVA_HOME%\bin

java 설치 완료

통합개발환경(IDE)
Intgrated Development Environment
코딩, 디버깅, 컴파일, 배포 등 프로그램 개발에 관련된 모든 작업을
하나의 프로그램 안에서 처리하는 환경을 제공하는 소프트웨어

이클립스
Visual Studio
Intellij
pychon

java 객체지향 언어(OOP) Object Oriented Programming 
상태와 기능이 정의된 객체로 무언가를 한다.

객체지향프로그래밍의 특징
1. 캡슐화(알약)
2. 추상화(추상적인 표현) -> 구체화
3. 상속화(코드를 물려받아서 사용)
4. 다형화(다양한 형태로 표현한다.)

java의 장점
한번 작성하면 다른 운영체제에서도 작동을 잘한다.

 JRE System Library -> 기본적으로 제공하는 기능들
src -> 소스파일들 저장

프로젝트는 패키지를 만들어서 관리

패키지 안에 클래스를 만들어서 관리

클래스를 만들때 이름의 첫 글자는 반드시 대문자로 작성을 해야한다.

주의점

중괄호는 항상 쌍으로 존재한다.

프로그램을 실행하면 main영역 안에 있는 코드를 읽는다.

명령이 끝나면 세미콜론(;)을 입력한다.


자바 프로그램의 구조
자바 언어로 만들어진 파일을 컴파일을 하면서
기계어 파일인 바이트코드(.class)파일이 생성된다.
이후 바이트코드 파일을 JVM이 읽고 실행하게 된다.

JVM(Java Virtual Machine) 자바가상머신
자바 프로그램 실행환경을 만들어주는 소프트웨어
자바 코드를 컴파일 하여 바이트코드로 만들면
JVM 환경에서 실행된다.
JVM은 JRE에 포함되어 있다.

바이트코드란
우리가 프로그래밍 언어로 명령을 한다고 해서 컴퓨터가 바로 알아들을수는 없다.
프로그래밍 언어를 1과 0으로 이루어진 바이트코드로 변환을 해주는 작업을 거쳐야 한다.
이것을 바이트코드라고 부른다.

컴파일
자바 파일을 바이트코드로 바꾸는 일련의 과정
컴파일러가 컴파일을 한다.

프로그램의 구성
- 컴퓨터 프로그램은 데이터(data)와 명령어(instructio)의 결합으로 구성된다.

데이터
실제적인 값을 의미한다.
숫자, 문자와 같은 단순한 데이터부터
소리, 사진, 영상등의 복합적인 데이터가 있다.
데이터는 언제든지 수정할 수 있어야하며, 사용 목적에 따라 다른 형태로 가공할 수 있어야 한다.
이러한 데이터는 컴퓨터의 메모리에 저장된다.

데이터의 출력
System.out.print() : 괄호 안의 데이터를 출력한다.
System.out.println() : 괄호 안의 데이터를 출력하고 줄을 바꿔준다(개행)

자료형
기본자료형(문자, 숫자(정수, 실수), 논리) 8가지
자료형 	키워드 	메모리크기		표현범위
논리형 	boolean	1bit			true, false
문자형	char		2byte			0
(한글자 / ' ')
정수형 	byte		1byte			-128 ~ 127
		short 		2byte			-32,786 ~ 32,767
		int		4byte			-21,474,83,648 ~ 2,147,483,647
		long		8byte			-900경 ~ 900경
실수형	float		4byte			기본값 0.0
		double	8byte			기본값 0.0


참조자료형
하나의 기본 자료형으로는 표현할 수 없는 것들을 표현할 때 사용하는 자료형
개발자가 직접 추가하여 사용할 수도 있기 때문에 개수가 정해져 있지 않다.
대표적으로는 String이라는 문자열을 저장할 수 있는 참조자료형이 있다.

문자열
ex) "p" <- 문자열 / " "로 구분









