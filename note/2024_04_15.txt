자바 입출력과 스트림
- 프로그램은 데이터를 외부에서 입력받아 처리하고 출력하는 구조를 이룸
- 프로그램으로 들어오는 값을 Input이라고 함
- 프로그램을 나가는 모든 값을 Output이라고 함
- 자바는 입출력을 처리하기 위해 I/O 패키지를 제공

입출력
- 디스크 상에 존재하는 데이터
- 키보드나 마우스와 같은 외부 입력장치에서 입력되는 데이터
- 인터넷을 통해 전송되는 데이터

스트림(Stream)
- 자바가 데이터를 주고받는 작업을 도와주는 통로

File 클래스
- 파일 또는 폴더에 대한 정보를 제공하는 클래스
- 경로명, 파일 크기, 타입, 날짜 등의 속성 정보 제공
- 파일 생성, 삭제, 이름 변경 등 파일 관리 작업을 지원하기 위한 메서드로 구성

isFile() 
- 최종 목적지가 파일 형태이면 true, 아니면 false

length() 
- 파일의 크기

isDirectory() 
- 최종 목적지가 폴더면 true, 아니면 false

list() 
- 경로의 하위 요소들의 이름을 String 배열에 저장

exists() 
- 경로로 접근하는 중 정상적으로 파일이나 폴더가 존재하면 true, 존재하지 않으면 false

mkdir() 
- 폴더 생성하는 메서드(하나만 만들어짐)	

mkdirs() 
- 폴더 생성하는 메서드(여러 개 만들어짐)

입출력 스트림의 종류
- 자바의 기본적인 데이터 입출력은 java.io 패키지에서 제공
- java.io 패키지에서는 파일 시스템의 정보를 얻기 위한 File 클래스와 데이터 입출력을 위한 다양한 스트림 클래스를 제공
- 스트림의 종류를 크게 구분하면 전달 방식에 따라 byte 기반의 스트림과 문자(char) 기반의 스트림으로 구분

바이트(byte) 기반의 스트림
- 컴퓨터의 모든 데이터는 바이트(byte) 단위로 이루어져 있음
- 바이트 기반의 스트림의 경우 모든 타입의 데이터를 읽고 쓰는 것이 가능
- 바이트 기반의 스트림은 입력 스트림과 출력 스트림이 있음

InputStream
- 바이트 기반 입력 스트림은 최상위 클래스로 InputStream이 제공
- 해당 클래스를 통해 다양한 입력 스트림들이 존재

InputStream의 주요 메서드

int read()
- 문자를 1byte씩 읽고 반환
- 더 이상 읽을 문자가 없으면 -1 반환

int read([byte[] b])
- 매개변수로 주어진 배열에 읽은 문자를 저장
- 실제로 읽은 수 만큼 반환
- 더 이상 읽을 문자가 없으면 -1 반환

int read(byte[] b, int offset, int len)
- 매개변수로 주어진 배열에 정해진 범위만큼 읽어서 저장
- offset(시작 위치)
- len(길이)

int available()
- 스트림으로부터 읽어올 수 있는 데이터의 크기 반환

close()
- 스트림 사용을 종료하고 자원 반환

fileInputStream
- 파일에서 바이트 단위로 자료를 읽어들일 때 사용하는 스트림
- 이미지, 동영상, 텍스트 등 모든 타입의 파일을 읽어올 수 있음

OutputStream
- 바이트 기반의 출력 스트림은 최상위 클래스로  OutputStream 객체가 제공됨
- 해당 클래스를 상속해 다양한 출력 스트림 존재

int write(int b)
- 1byte 출력

int write(byte[] b)
- 매개변수로 주어진 배열의 모든 바이트 출력

int write(byte[] b, int offset, int len)
- 매개변수로 주어진 배열에 정해진 범위만큼 읽어서 출력 시작 위치(offset), 길이(len)

int flush()
- 출력 버퍼에 잔류하는 모든 내용 출력

close()
- 스트림의 사용을 종료하고 자원을 반환

FileOutputStream

문자(char) 기반 스트림
- 자바에서 기본 자료형은 char 형을 통해 문자를 저장
- 1byte 단위로 처리하는 바이트 기반 스트림은 모든 파일을 다룰 수 있으나 문자를 처리하는 char 형의 크기는 2byte로 별도의 처리를 하지 않으면 정상적으로 읽지 못하는 경우가 있음.
- 문자 기반의 스트림을 사용하면 간단하게 문자를 처리 가능

문자 기반 입력 스트림
- Reader를 상속해 다양한 클래스 제공

문자 기반 스트림에서 제공하는 메서드

int read()
- 1개의 문자를 읽고 반환
- 더이상 읽을 문자가 없으면 -1 반환

int read(char[] buf)
- 매개변수로 주어진 배열에 읽은 문자를 저장
- 읽은 수만큼 반환
- 읽을 문자가 없으면 -1 반환

int read(char[] buf, int offset, int len)
- 매개변수로 주어진 배열에 정해진 범위만큼 읽어 저장

close()
- 스트림 사용을 종료
- 자원 반환

FileReader
- 파일로부터 내용을 읽어오는 기능은 FileInputStream과 같음