자바와 변수의 생명주기

변수의 종류
1. 지역변수(local variable) : 중괄호 지역 내에서 선언된 변수
2. 매개변수(parameters) : 메서드 안쪽으로 값을 넘겨주는 변수
3. 인스턴스변수(instance variable) : 참조용 클래스 안에서 만들어진 변수
4. 클래스변수(class variable) : 참조용 클래스 안에서 만들어지지만 타입 앞에 static이 있는 변수

변수의 생명주기
1. 지역변수 : 지역변수를 선언한 중괄호 내에서만 유효하다.
2. 매개변수 : 메서드가 호출될 때 만들어지고, 메서드가 끝나면 소멸한다.
3. 인스턴스(객체) 변수 : 객체가 생성될 때 만들어지고, 그 객체를 참조하고 있는 변수가 없으면 소멸된다.
4. 클래스변수 : 클래스가 처음 호출될 때 생명이 시작되고, 자바 프로그램이 끝날때 소멸한다.

클래스의 로딩
자바의 클래스들이 언제 어디서 메모리에 올라가고 클래스 맴버들이 초기화되는 방법

JVM의 클래스로더(class Loader)

클래스로더는 컴파일된 자바의 클래스파일을 동적으로 로드한다.
JVM의 메모리 영역인 데이터 영역에 배치하는 작업을 수행한다.

클래스를 로딩하는 순서
1. loading(로딩) : 클래스 파일을 가져와서 JVM의 메모리에 로드한다.
2. Linking(링킹) : 클래스 파일을 사용하기 위해 검증하는 과정
3. Initialization(초기화) : 클래스 변수들을 적절한 값으로 초기화한다.

JVM은 실행될 때 모든 클래스를 메모리에 올려놓지 않고, 필요할때마다 클래스를 메모리에 올려 효율적으로 관리한다.

메모리에 올라가는 시점
1. 객체를 생성했을 때
2. static 변수의 호출 : 클래스 내부의  static 멤버를 호출하면, 객체화 하지 않아도 클래스가 로드된다.
3. static 메서드의 호출 : static 변수를 호출한 것과 같이 클래스가 로드된다.
4. 내부클래스 호출 : 내부클래스의 객체를 생성하기 위해서는 외부클래스의 객체를 먼저 생성해야 한다.